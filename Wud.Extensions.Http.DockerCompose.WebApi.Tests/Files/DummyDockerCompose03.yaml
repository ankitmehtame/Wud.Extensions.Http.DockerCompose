version: "3.4"

services:
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    hostname: "{{.Service.Name}}.{{.Node.Hostname}}"
    ports:
      - "18080:8080"
    volumes:
      - '/common-data/homeassistant/zigbee2mqtt/data:/app/data'
      - '/run/udev:/run/udev:ro'
    devices:
      - '/dev/serial/by-id/usb-Nabu_Casa_SkyConnect_v1.0_2ebc6e2c6725ec118dd8fd87a8a1c857-if00-port0:/dev/ttyACM0'
    environment:
      - TZ=Asia/Singapore
    restart: always

  db:
    container_name: homeassistant_db
    image: dummy-image:2023.12
    hostname: "{{.Service.Name}}.{{.Node.Hostname}}"
    environment:
      - TZ=Asia/Singapore
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repluser
      - POSTGRESQL_REPLICATION_PASSWORD=replp
      - POSTGRESQL_USERNAME=hassuser
      - POSTGRESQL_PASSWORD=hassp
      - POSTGRESQL_DATABASE=hassdb
    ports:
      - "5432:5432"
    volumes:
      - 'pg-vol:/bitnami/postgresql:z'
    labels:
      wud.tag.include: '^14\.\d+\.\d+$'
    restart: always
    # deploy:
    #   mode: replicated
    #   replicas: 1
    #   placement:
    #     constraints:
    #       - node.labels.homeassistant == true

  ha:
    container_name: homeassistant_ha
    image: dummy-image:2023.12 #my-comment
    hostname: "{{.Service.Name}}.{{.Node.Hostname}}"
    # network_mode: "bridge"
    network_mode: host
    privileged: true
    ports:
      - "8123:8123"
      - "8555:8555" # Go2RTC WebRTC
      - "1984:1984" # Go2RTC API
      - "18554:18554" # Go2RTC RTSP
    environment:
      TZ: 'Asia/Singapore'
    volumes:
      - '/common-data/homeassistant:/config'
      - '/common-data/homeassistant/media:/media'
      - /etc/localtime:/etc/localtime:ro
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/run/dbus:/run/dbus:ro"
      # - 'nfs:/nfs'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
    labels:
      wud.tag.include: '^\d+\.\d+\.\d+$'
      wud.tag.exclude: '^\d+\.\d+\.0$'
    restart: always
    # deploy:
    #   mode: replicated
    #   replicas: 1
    #   placement:
    #     constraints:
    #       - node.labels.homeassistant == true

  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome:stable
    volumes:
      - /common-data/homeassistant/esphome:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ESPHOME_DASHBOARD_USE_PING=true
      - TZ=Asia/Singapore
    restart: always
    privileged: true
    network_mode: host
    # ports:
    #   - "6052:6052"
    #   - "6053:6053"

volumes:
  pg-vol:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /docker-data/postgres/data_14

  # nfs:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: /mnt/nfs/cluster-data